#!/bin/bash

pacman -Sy
clear

#Configurando o teclado#
echo -e 'Configurando o teclado:'
echo -e '\nIndique o formato do seu teclado !'
echo -e '\n 1=br-abnt \n 2=br-abnt2 \n 3=br-latin1-abnt2 \n 4=br-latin1-us \n'
read -p "> " linguagem
if [ $linguagem == 1 ]
then
	loadkeys br-abnt
	echo -e "\nSeu teclado agora é br-abnt !"

elif [ $linguagem == 2 ]
then
	loadkeys br-abnt2
	echo -e "\nSeu teclado agora é br-abnt2 !"

elif [ $linguagem == 3 ]
then
	loadkeys br-latin1-abnt2
	echo -e "\nSeu teclado agora é br-latin1-abnt2 !"

elif [ $linguagem == 4 ]
then
	loadkeys br-latin1-us
	echo -e "\nSeu teclado agora é br-latin1-us !"	
else
	clear
	echo "Insira apenas números de 1 à 4 !! "
	exit
fi
#Configurando o teclado#

clear

#Configurando a rede#
echo -e 'Configurando a rede:'
echo -e '\n(Nota importante > Quando for necessário responder sim ou não , responda absolutamente em minúsculo !!)\n'
read -p "Você está conectado a internet ? s/n = " conexao
if [ $conexao == n ]
then 
	clear
	wifi-menu
elif [ $conexao == s ]
then	
	echo
else
	clear
	echo "Apenas (s) ou (n) !!"	
	exit		
fi
#Configurando a internet#

clear

#Particionando o disco#
echo -e 'Particionando o disco:'
echo -e '\n 1=cfdisk \n 2=parted \n'
read -p "Qual particionador deseja utilizar ? = " particionador
if [ $particionador == 1 ]
then
	cfdisk  
elif [ $particionador == 2 ] 
then
	parted  
else
	echo "Apenas 1 ou 2 !! "
	exit
fi
#Particionando o disco#

clear

#Formatando as partições#
while [ $saida: != sair ]
do
	clear
	echo -e "\n"
	fdisk -l | grep /dev/
	echo -e "\n"
	echo -e "(Caso já tenha particionado o disco , apenas aperte 'Enter' e digite 'sair' no final)"
	echo -e "\n"
	echo -e "Selecione uma partição,exemplo /dev/sda1 /dev/sda2 !!\n"
	read -p "Selecione uma partição = " particao
	echo -e "\nEsquema de formatação de discos"
	echo -e "\n 1=Ext4 \n 2=Ext3 \n 3=Ext2 \n 4=Fat \n 5=Vfat \n 6=NTFS \n 7=Swap\n"
	read -p "Insira um número = " formato
			if [ $formato == 1 ]
			then
				mkfs.ext4 $particao
			elif [ $formato == 2 ]
			then 			
				mkfs.ext3 $particao
			elif [ $formato == 3 ]
			then 
				mkfs.ext2 $particao
			elif [ $formato == 4 ]
			then
				mkfs.fat $particao
			elif [ $formato == 5 ]
			then 
				mkfs.vfat $particao
			elif [ $formato == 6 ]
			then
				mkfs.ntfs $particao
			elif [ $formato == 7 ]
			then
				mkswap $particao
				swapon $particao
			else
				echo -e "Apenas numeros entre 1 à 7 !!"
			fi
	clear
	echo -e "\nPressione 'Enter' para continuar o particionamento ou digite 'sair' quando terminar de configurar todas as partições\n "
	read -p "= " saida
		if [ $saida == sair ]
		then
			break
		fi
done
#Formatando as partições#

clear

#SConfigurando partições#
echo -e 'Configurando partições:\n'
fdisk -l | grep /dev/
echo -e "\n"
read -p "Indique a sua partição / (root) = " particao_root 
mount $particao_root /mnt
mkdir /mnt/home
mkdir /mnt/boot
clear
read -p "Deseja indicar outras partições? s/n = " particoes
while [ $particoes == s ]
do
	clear
	echo -e 'Configurando partições:\n'
	fdisk -l | grep /dev/
	echo -e "\n"
	read -p "Indique a sua partição = " particao
	read -p "Indique o local em que ela será montada, EX: /home /boot = " particaoMont
	mount $particao /mnt$particaoMont
	echo -e "\nPressione 'Enter' para continuar o particionamento ou digite 'sair' quando terminar de configurar todas as partições\n "
	read -p "= " particoes1
    	if [ $particoes1 == sair ]
    	then
        	    break
		fi
done
#SConfigurando partições#

clear

#Instalando o sistema base e o kernel#
echo -e 'Instalando o sistema base e o kernel: \n'
echo -e "\nQual kernel deseja instalar ? \n\n 1=Linux \n 2=Linux-lts \n 3=Linux-hardened \n"
read -p "> " kernel_sistema
if [ $kernel_sistema == 1 ]
then
	pacstrap /mnt base linux linux-firmware
elif [ $kernel_sistema == 2 ]
then
	pacstrap /mnt base linux-lts linux-firmware
elif [ $kernel_sistema == 3 ]
then
	pacstrap /mnt base linux-hardened linux-firmware
else
	clear
	echo -e 'Apenas números de 1 à 3 !'
	exit
fi
#Instalando o sistema base e o kernel#

#Configurando o Fstab#
genfstab -U /mnt >> /mnt/etc/fstab
#Configurando o Fstab#

clear

#Configurando idioma#
echo 'LANG=pt_BR.UTF-8' > /etc/locale.conf
#Configurando idioma#

#mkinitcpio#
arch-chroot /mnt/ mkinitcpio -P
#mkinitcpio#

clear

#Definindo a senha do root#
echo -e 'Definindo senha do root: \n'
echo -e "\nInsira a senha do seu root "
arch-chroot /mnt/ passwd
#Definindo a senha do root#

clear

#Criando usuario#
echo -e 'Criando usuário: \n'
echo -e 'Digite o nome do seu usuário: '
read -p "> " usuario
useradd --badnames -m -g users $usuario 
passwd $usuario
mkdir /home/$usuario/Downloads
mkdir /home/$usuario/Documentos
mkdir /home/$usuario/Imagens
mkdir /home/$usuario/Videos
mkdir /home/$usuario/Scripts
mkdir /home/$usuario/.icons
mkdir /home/$usuario/.themes
#Criando usuario#

clear

#Instalando o systlinux e essenciais#
arch-chroot /mnt/ pacman -S syslinux gptfdisk --noconfirm
arch-chroot /mnt/ syslinux-install_update -i -a -m
arch-chroot /mnt/ pacman -S nano networkmanager network-manager-applet wireless_tools wpa_supplicant dhcp dhcpcd --noconfirm
arch-chroot /mnt/ systemctl enable dhcpcd
#Instalando o syslinux e essenciais#

clear

#XORG,SOM,VIDEO,ARQUIVOS E CODECS#
arch-chroot /mnt/ pacman -S xorg-xinit xorg-twm xterm xorg-xclock xorg-server xorg-apps xf86-input-synaptics xarchiver arj p7zip sharutils unrar mlocate lzip unzip pulseaudio pulseaudio-alsa pavucontrol alsa-firmware alsa-utils a52dec faac faad2 flac jasper lame libdca libdv libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore gstreamer gst-plugins-base gst-plugins-base-libs gst-plugins-good gst-plugins-bad gst-plugins-ugly gst-libav gvfs gvfs-afc gvfs-mtp gvfs-smb --noconfirm

#XORG,SOM,VIDEO,ARQUIVOS E CODECS#

clear

#Instalando driver de video#
echo -e "\n Selecione o driver de video correspondente à sua maquina: \n\n 1=AMD \n 2=Intel \n 3=Nvidia \n 4=Genérico \n 5=ATI \n" 
read -p "> " driver_video 
if [ $driver_video == 1 ] #VARIÁVEL 1 IRÁ INSTALAR OS DRIVERS DE VIDEO DA AMD/ATI
then
	pacman -S xf86-video-amdgpu --noconfirm
	pacman -S mesa --noconfirm
	pacman -S lib32-mesa --noconfirm
	clear
elif [ $driver_video == 2 ] #VARIÁVEL 2 IRÁ INSTALAR OS DRIVERS DE VIDEO DA INTEL
then
	pacman -S xf86-video-intel --noconfirm
	pacman -S mesa --noconfirm
	pacman -S lib32-mesa --noconfirm
	clear
elif [ $driver_video == 3 ] #VARIÁVEL 3 IRÁ INSTALAR OS DRIVERS DE VIDEO DA NVIDIA
then
	pacman -S xf86-video-nouveau --noconfirm
	pacman -S nvidia --noconfirm
	pacman -S nvidia-utils --noconfirm
	clear
elif [ $driver_video == 4 ] #VARIÁVEL 4 IRÁ INSTALAR OS DRIVERS DE VIDEO GENÉRICOS
then
	pacman -S xf86-video-fbdev --noconfirm
	pacman -S xf86-video-vesa --noconfirm
	clear
elif [ $driver_video == 5 ] #VARIÁVEL 5 IRÁ INSTALAR OS DRIVER DE VIDEO DÁ ATI
then
	pacman -S xf86-video-ati --noconfirm
	pacman -S mesa --noconfirm
	pacman -S lib32-mesa --noconfirm
	clear
else
	clear 
	echo -e "\n Apenas números de 1 à 4 !!" 
	break 
fi 
#Instalando driver de video#
 
#Instalando a interface gráfica#
echo -e "\n Selecione uma interface gráfica: \n\n 1=Budgie \n 2=Cinnamon \n 3=Deepin \n 4=Enlightenment \n 5=Gnome \n 6=Kde Plasma \n 7=Lxde \n 8=Lxqt \n 9=Mate \n 10=Xfce \n" 
read -p "> " interface 
if [ $interface == 1 ] #VARIÁVEL 1 IRÁ INSTALAR A INTERFACE BUDGIE
then
	pacman -S budgie-desktop --noconfirm
	clear
elif [ $interface == 2 ] #VARIÁVEL 2 IRÁ INSTALAR A INTERFACE CINNAMON
then
	pacman -S cinnamon --noconfirm
	pacman -S nemo-fileroller --noconfirm
	clear
elif [ $interface == 3 ] #VARIÁVEL 3 IRÁ INSTALAR A INTERFACE DEEPIN
then
	pacman -S deepin --noconfirm
	pacman -S deepin-extra --noconfirm
elif [ $interface == 4 ] #VARIÁVEL 4 IRÁ INSTALAR A INTERFACE ENLIGHTENMENT
then
	pacman -S enlightenment --noconfirm
	clear
elif [ $interface == 5 ] #VARIÁVEL 5 IRÁ INSTALAR A INTERFACE GNOME
then
	pacman -S gnome --noconfirm
	pacman -S gnome-extra --noconfirm
	clear
elif [ $interface == 6 ] #VARIÁVEL 6 IRÁ INSTALAR A INTERFACE KDE-PLASMA
then
	pacman -S plasma --noconfirm
elif [ $interface == 7 ] #VARIÁVEL 7 IRÁ INSTALAR A INTERFACE LXDE
then
	pacman -S lxde --noconfirm
	pacman -S lxde-gtk3 --noconfirm
elif [ $interface == 8 ] #VARIÁVEL 8 IRÁ INSTALAR A INTERFACE LXQT
then
	pacman -S lxqt --noconfirm
	clear
elif [ $interface == 9 ] #VARIÁVEL 9 IRÁ INSTALAR A INTERFACE MATE
then
	pacman -S mate --noconfirm
	pacman -S mate-extra --noconfirm
	clear
elif [ $interface == 10 ] #VARIÁVEL 10 IRÁ INSTALAR A INTERFACE XFCE
then
	pacman -S xfce4 --noconfirm
	pacman -S xfce4-goodies --noconfirm
	clear
else
	clear 
	echo -e "\n Apenas números de 1 à 10 !!" 
	break 
fi 
#Instalando a interface gráfica#

#Display Manager#
echo -e "\n Selecione um gerenciador de entrada (Display Manager): \n\n 1=Lightdm \n 2=SDDM \n 3=GDM \n 4=Lxdm \n" 
read -p "> " display 
if [ $display == 1 ]
then
	pacman -S lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings --noconfirm
	systemctl enable lightdm
	clear
elif [ $display == 2 ]
then
	pacman -S sddm --noconfirm
	systemctl enable sddm
	clear
elif [ $display == 3 ]
then
	pacman -S gdm --noconfirm
	systemctl enable gdm
	clear
elif [ $display == 4 ]
then
	pacman -S lxdm --noconfirm
	systemctl enable lxdm
	clear
else
	clear
	echo -e "\n Apenas números de 1 à 4 !!" 
	break
#Display Manager#

#Instalando o Bluetooth#
echo -e "\n Deseja instalar os drivers de Bluetooth ? s/n \n"
read -p  "> " bluetooth
if [ $bluetooth == s ]
then
	pacman -S bluez --noconfirm
	pacman -S blueman --noconfirm
	pacman -S bluez-utils --noconfirm
	modprobe btusb
	systemctl enable bluetooth
	systemctl start bluetooth
	clear 
elif [ $bluetooth == n ]
then
	clear
else
	clear
	echo -e "\n Apenas 's' ou 'n' !! "
	exit
fi
#Instalando o Bluetooth#

#Instalando os drivers de impressora#
echo -e "\n Deseja instalar os drivers de impressora ? s/n  \n"
read -p "> " impressora
if [ $impressora == s ]
then
	pacman -S cups --noconfirm
	pacman -S hplip --noconfirm
	pacman -S system-config-printer --noconfirm
	pacman -S gtk3-print-backends --noconfirm
	systemctl enable org.cups.cupsd.service
	systemctl start org.cups.cupsd.service
	clear
elif [ $impressora == n ]
then
	clear
else
	clear
	echo -e "\n Apenas 's' ou 'n' !! "
	exit
fi
#Instalando os drivers de impressora#

#Instalando um navegador#
echo -e "\n Qual navegador deseja instalar: \n\n 0=Nenhum \n 1=Chromium \n 2=Firefox \n 3=Min \n 4=Opera \n"
read -p "> " navegador
if [ $navegador == 0 ]
then
	clear
elif [ $navegador == 1 ]
then
	pacman -S chromium --noconfirm
	clear
elif [ $navegador == 2 ]
then
	pacman -S firefox --noconfirm
	pacman -S firefox-i18n-pt-br --noconfirm
	clear
elif [ $navegador == 3 ]
then
	pacman -S min --noconfirm
	clear
elif [ $navegador == 4 ]
then
	pacman -S opera --noconfirm
	clear
else
	clear
	echo -e "\n Apenas números de 0 a 4 "
	exit
fi
#Instalando um navegador#

#Torrent#
echo -e "\nQual cliente torrent deseja instalar: \n\n 0=Nenhum \n 1=Deluge \n 2=qbittorrent \n 3=transmission \n 4=ktorrent"
read -p "> " cliente_torrent
if [ $cliente_torrent = 0 ]
then
	clear
elif [ $cliente_torrent == 1 ]
then
	pacman -S deluge --noconfirm
	pacman -S deluge-gtk --noconfirm
	clear
elif [ $cliente_torrent == 2 ]
then
	pacman -S qbittorrent --noconfirm
	clear
elif [ $cliente_torrent == 3 ]
then
	pacman -S transmission-gtk --noconfirm	
	clear
elif [ $cliente_torrent == 4 ]
then
	pacman -S ktorrent --noconfirm
	clear
else
	clear
	echo -e "\n Apenas números de 1 a 4 "
	exit
fi
#Torrent#

#Pacotes utilitários extras#
echo -e "\nDeseja instalar alguns pacotes extras ? s/n "
read -p "> " utilitarios
if [ $utilitarios == s ]
then
	pacman -S gedit --noconfirm
	pacman -S git --noconfirm
	pacman -S terminator --noconfirm
	pacman -S galculator --noconfirm
	pacman -S packer --noconfirm
	pacman -S fakeroot --noconfirm
	pacman -S gparted --noconfirm
	pacman -S mtools --noconfirm
	pacman -S wget --noconfirm
	pacman -S curl --noconfirm 
	pacman -S htop --noconfirm 
	pacman -S sudo --noconfirm
	pacman -S screenfetch --noconfirm 
	pacman -S acpi --noconfirm
	pacman -S nmap --noconfirm
	pacman -S net-tools --noconfirm
	pacman -S dnsutils --noconfirm
	pacman -S tor --noconfirm
	pacman -S proxychains --noconfirm
	pacman -S libreoffice --noconfirm
	pacman -S libreoffice-pt-BR --noconfirm
	pacman -S mupdf --noconfirm
	pacman -S clamav --noconfirm
	pacman -S firewalld --noconfirm
	pacman -S irssi --noconfirm
	pacman -S binutils --noconfirm
	clear
elif [ $utilitarios == n ]
then
	clear
else
	clear
	echo -e "\nInsira apenas 's' ou 'n' "
	exit
fi
#Pacotes utilitários extras#
echo -e "Agora reinicie a máquina !! "


